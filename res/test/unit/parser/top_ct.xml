<testSet>
  <!-- complexType -->
  <test group="attribute" name="[complexType] unsupported attribute from no namespace">
    <schema fileName="complexType_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" attribute (from no namespace) is not supported.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType] unsupported attribute from XML 1.0 namespace">
    <schema fileName="complexType_0002.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" attribute (from http://www.w3.org/XML/1998/namespace namespace) is not supported.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType] unsupported attribute from other namespace">
    <schema fileName="complexType_0003.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "bar" attribute (from http://example.org namespace) is not supported.</message>
    </schema>
  </test>
  <test group="content" name="[complexType] node not white space neither comment">
    <schema fileName="complexType_0004.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The node is not allowed ("foo").</message>
    </schema>
  </test>
  <test group="content" name="[complexType] foo child element is not supported">
    <schema fileName="complexType_0005.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" element (from no namespace) is unexpected, expected: "annotation", "simpleContent" or "complexContent".</message>
    </schema>
  </test>
  <!-- complexType::abstract -->
  <test group="attribute" name="[complexType][attribute::abstract] true (uppercase)">
    <schema fileName="complexType_abstract_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "abstract" attribute is invalid: "True" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::abstract] false (uppercase)">
    <schema fileName="complexType_abstract_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "abstract" attribute is invalid: "False" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::abstract] Numeric other than 0 or 1">
    <schema fileName="complexType_abstract_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "abstract" attribute is invalid: "2" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <!-- complexType::block -->
  <test group="attribute" name="[complexType][attribute::block] Not extension neither restriction">
    <schema fileName="complexType_block_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "foo" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::block] #all (uppercase)">
    <schema fileName="complexType_block_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#ALL" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::block] #all with white spaces">
    <schema fileName="complexType_block_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "    #all    " is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::block] extension (uppercase)">
    <schema fileName="complexType_block_0012.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "Extension" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::block] restriction (uppercase)">
    <schema fileName="complexType_block_0013.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "Restriction" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::block] #all with extension">
    <schema fileName="complexType_block_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#all extension" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::block] #all with restriction">
    <schema fileName="complexType_block_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "restriction #all" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::block] Value not extension neither restriction in list">
    <schema fileName="complexType_block_0016.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "extension foo restriction" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <!-- complexType::final -->
  <test group="attribute" name="[complexType][attribute::final] Not extension neither restriction">
    <schema fileName="complexType_final_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "foo" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::final] #all (uppercase)">
    <schema fileName="complexType_final_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "#ALL" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::final] #all with white spaces">
    <schema fileName="complexType_final_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "    #all    " is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::final] extension (uppercase)">
    <schema fileName="complexType_final_0012.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "Extension" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::final] restriction (uppercase)">
    <schema fileName="complexType_final_0013.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "Restriction" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::final] #all with extension">
    <schema fileName="complexType_final_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "#all extension" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::final] #all with restriction">
    <schema fileName="complexType_final_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "restriction #all" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::final] Value not extension neither restriction in list">
    <schema fileName="complexType_final_0016.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "extension foo restriction" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <!-- complexType::id -->
  <test group="attribute" name="[complexType][attribute::id] Empty string">
    <schema fileName="complexType_id_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::id] Only white spaces">
    <schema fileName="complexType_id_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::id] Separated by whitespaces">
    <schema fileName="complexType_id_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "foo bar" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::id] Starts with digit">
    <schema fileName="complexType_id_0012.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "8foo" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::id] Starts with .">
    <schema fileName="complexType_id_0013.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: ".foo" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::id] Starts with -">
    <schema fileName="complexType_id_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "-foo" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::id] Contains invalid character">
    <schema fileName="complexType_id_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "foo:bar" is an invalid ID datatype.</message>
    </schema>
  </test>
  <!-- complexType::mixed -->
  <test group="attribute" name="[complexType][attribute::mixed] true (uppercase)">
    <schema fileName="complexType_mixed_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "mixed" attribute is invalid: "True" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::mixed] false (uppercase)">
    <schema fileName="complexType_mixed_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "mixed" attribute is invalid: "False" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::mixed] Numeric other than 0 or 1">
    <schema fileName="complexType_mixed_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "mixed" attribute is invalid: "2" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <!-- complexType::name -->
  <test group="attribute" name="[complexType][attribute::name] Empty string">
    <schema fileName="complexType_name_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::name] Only white spaces">
    <schema fileName="complexType_name_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::name] Separated by whitespaces">
    <schema fileName="complexType_name_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "foo bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::name] Starts with digit">
    <schema fileName="complexType_name_0012.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "8foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::name] Starts with .">
    <schema fileName="complexType_name_0013.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: ".foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::name] Starts with -">
    <schema fileName="complexType_name_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "-foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[complexType][attribute::name] Contains invalid character">
    <schema fileName="complexType_name_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "foo:bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <!-- annotation -->
  <test group="content" name="[complexType][annotation] not part of the XML Schema 1.0 namespace">
    <schema fileName="annotation_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "annotation" element (from no namespace) is unexpected, expected: "annotation", "simpleContent" or "complexContent".</message>
    </schema>
  </test>
  <!-- simpleContent -->
  <test group="content" name="[complexType][simpleContent] not part of the XML Schema 1.0 namespace">
    <schema fileName="simpleContent_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "simpleContent" element (from no namespace) is unexpected, expected: "annotation", "simpleContent" or "complexContent".</message>
    </schema>
  </test>
  <!-- complexContent -->
  <test group="content" name="[complexType][complexContent] not part of the XML Schema 1.0 namespace">
    <schema fileName="complexContent_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "complexContent" element (from no namespace) is unexpected, expected: "annotation", "simpleContent" or "complexContent".</message>
    </schema>
  </test>
  <!-- container -->
  <test group="content" name="[complexType][container] annotation unexpected annotation">
    <schema fileName="container_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "annotation" element (from http://www.w3.org/2001/XMLSchema namespace) is unexpected, expected: "simpleContent" or "complexContent".</message>
    </schema>
  </test>
  <test group="content" name="[complexType][container] simpleContent unexpected simpleContent">
    <schema fileName="container_0002.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "simpleContent" element (from http://www.w3.org/2001/XMLSchema namespace) is unexpected, expected: none.</message>
    </schema>
  </test>
  <test group="content" name="[complexType][container] complexContent unexpected complexContent">
    <schema fileName="container_0003.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "complexContent" element (from http://www.w3.org/2001/XMLSchema namespace) is unexpected, expected: none.</message>
    </schema>
  </test>
  <!-- TEMPLATE
  <test group="attribute|content" name="">
    <schema fileName=".xsd">
      <exception></exception>
      <message></message>
    </schema>
  </test>
  -->
</testSet>
