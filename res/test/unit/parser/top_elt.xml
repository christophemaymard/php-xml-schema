<testSet>
  <!-- element -->
  <test group="attribute" name="[element] unsupported attribute from no namespace">
    <schema fileName="element_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" attribute (from no namespace) is not supported.</message>
    </schema>
  </test>
  <test group="attribute" name="[element] unsupported attribute from XML 1.0 namespace">
    <schema fileName="element_0002.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" attribute (from http://www.w3.org/XML/1998/namespace namespace) is not supported.</message>
    </schema>
  </test>
  <test group="attribute" name="[element] unsupported attribute from other namespace">
    <schema fileName="element_0003.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "bar" attribute (from http://example.org namespace) is not supported.</message>
    </schema>
  </test>
  <test group="content" name="[element] node not white space neither comment">
    <schema fileName="element_0004.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The node is not allowed ("foo").</message>
    </schema>
  </test>
  <test group="content" name="[element] foo child element is not supported">
    <schema fileName="element_0005.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" element (from no namespace) is unexpected, expected: none.</message>
    </schema>
  </test>
  <!-- element::abstract -->
  <test group="attribute" name="[element][attribute::abstract] true (uppercase)">
    <schema fileName="element_abstract_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "abstract" attribute is invalid: "True" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::abstract] false (uppercase)">
    <schema fileName="element_abstract_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "abstract" attribute is invalid: "False" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::abstract] Numeric other than 0 or 1">
    <schema fileName="element_abstract_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "abstract" attribute is invalid: "2" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <!-- element::block -->
  <test group="attribute" name="[element][attribute::block] Not substitution neither extension neither restriction">
    <schema fileName="element_block_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "foo" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all (uppercase)">
    <schema fileName="element_block_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#ALL" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with white spaces">
    <schema fileName="element_block_0016.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "    #all    " is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] substitution (uppercase)">
    <schema fileName="element_block_0017.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "subStitution" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] extension (uppercase)">
    <schema fileName="element_block_0018.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "exTension" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] restriction (uppercase)">
    <schema fileName="element_block_0019.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "Restriction" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with substitution">
    <schema fileName="element_block_0020.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#all substitution" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with extension">
    <schema fileName="element_block_0021.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "extension #all" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with restriction">
    <schema fileName="element_block_0022.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#all restriction" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] Value not substitution neither extension neither restriction in list">
    <schema fileName="element_block_0023.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "substitution extension foo restriction" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <!-- element::final -->
  <test group="attribute" name="[element][attribute::final] Not extension neither restriction">
    <schema fileName="element_final_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "foo" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::final] #all (uppercase)">
    <schema fileName="element_final_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "#ALL" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::final] #all with white spaces">
    <schema fileName="element_final_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "    #all    " is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::final] extension (uppercase)">
    <schema fileName="element_final_0012.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "Extension" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::final] restriction (uppercase)">
    <schema fileName="element_final_0013.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "Restriction" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::final] #all with extension">
    <schema fileName="element_final_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "#all extension" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::final] #all with restriction">
    <schema fileName="element_final_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "restriction #all" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::final] Value not extension neither restriction in list">
    <schema fileName="element_final_0016.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "final" attribute is invalid: "extension foo restriction" is an invalid derivationSet type, expected "#all" or a list of "extension" and/or "restriction".</message>
    </schema>
  </test>
  <!-- TEMPLATE
  <test group="attribute|content" name="">
    <schema fileName=".xsd">
      <exception></exception>
      <message></message>
    </schema>
  </test>
  -->
</testSet>
