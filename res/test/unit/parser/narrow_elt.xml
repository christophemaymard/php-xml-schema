<testSet>
  <!-- element -->
  <test group="attribute" name="[element] unsupported attribute from no namespace">
    <schema fileName="element_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" attribute (from no namespace) is not supported.</message>
    </schema>
  </test>
  <test group="attribute" name="[element] unsupported attribute from XML 1.0 namespace">
    <schema fileName="element_0002.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" attribute (from http://www.w3.org/XML/1998/namespace namespace) is not supported.</message>
    </schema>
  </test>
  <test group="attribute" name="[element] unsupported attribute from other namespace">
    <schema fileName="element_0003.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "bar" attribute (from http://example.org namespace) is not supported.</message>
    </schema>
  </test>
  <test group="content" name="[element] node not white space neither comment">
    <schema fileName="element_0004.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The node is not allowed ("foo").</message>
    </schema>
  </test>
  <test group="content" name="[element] foo child element is not supported">
    <schema fileName="element_0005.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" element (from no namespace) is unexpected, expected: "annotation", "simpleType" or "complexType".</message>
    </schema>
  </test>
  <!-- element::block -->
  <test group="attribute" name="[element][attribute::block] Not substitution neither extension neither restriction">
    <schema fileName="element_block_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "foo" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all (uppercase)">
    <schema fileName="element_block_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#ALL" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with white spaces">
    <schema fileName="element_block_0016.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "    #all    " is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] substitution (uppercase)">
    <schema fileName="element_block_0017.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "subStitution" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] extension (uppercase)">
    <schema fileName="element_block_0018.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "exTension" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] restriction (uppercase)">
    <schema fileName="element_block_0019.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "Restriction" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with substitution">
    <schema fileName="element_block_0020.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#all substitution" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with extension">
    <schema fileName="element_block_0021.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "extension #all" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with restriction">
    <schema fileName="element_block_0022.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#all restriction" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] Value not substitution neither extension neither restriction in list">
    <schema fileName="element_block_0023.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "substitution extension foo restriction" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <!-- element::form -->
  <test group="attribute" name="[element][attribute::form] Empty string">
    <schema fileName="element_form_0003.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "" is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] Only white spaces">
    <schema fileName="element_form_0004.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "       " is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] Not qualified neither unqualified">
    <schema fileName="element_form_0005.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "foo" is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] qualified with whitespaces">
    <schema fileName="element_form_0006.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "    qualified     " is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] unqualified with whitespaces">
    <schema fileName="element_form_0007.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "    unqualified     " is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] qualified (uppercase)">
    <schema fileName="element_form_0008.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "Qualified" is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] unqualified (uppercase)">
    <schema fileName="element_form_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "Unqualified" is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] qualified and unqualified">
    <schema fileName="element_form_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "qualified unqualified" is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <!-- element::id -->
  <test group="attribute" name="[element][attribute::id] Empty string">
    <schema fileName="element_id_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Only white spaces">
    <schema fileName="element_id_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Separated by whitespaces">
    <schema fileName="element_id_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "foo bar" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Starts with digit">
    <schema fileName="element_id_0012.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "8foo" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Starts with .">
    <schema fileName="element_id_0013.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: ".foo" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Starts with -">
    <schema fileName="element_id_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "-foo" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Contains invalid character">
    <schema fileName="element_id_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "foo:bar" is an invalid ID datatype.</message>
    </schema>
  </test>
  <!-- element::maxOccurs -->
  <test group="attribute" name="[element][attribute::maxOccurs] Non-negative integer other than 0 or 1">
    <schema fileName="element_maxOccurs_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "maxOccurs" attribute is invalid: "2" is invalid, expected "0" or "1".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::maxOccurs] Negative integer">
    <schema fileName="element_maxOccurs_0012.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "maxOccurs" attribute is invalid: "-9" is invalid, expected "0" or "1".</message>
    </schema>
  </test>
  <!-- element::minOccurs -->
  <test group="attribute" name="[element][attribute::minOccurs] Non-negative integer other than 0 or 1">
    <schema fileName="element_minOccurs_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "minOccurs" attribute is invalid: "2" is invalid, expected "0" or "1".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::minOccurs] Negative integer">
    <schema fileName="element_minOccurs_0012.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "minOccurs" attribute is invalid: "-9" is invalid, expected "0" or "1".</message>
    </schema>
  </test>
  <!-- element::name -->
  <test group="attribute" name="[element][attribute::name] Empty string">
    <schema fileName="element_name_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::name] Only white spaces">
    <schema fileName="element_name_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::name] Separated by whitespaces">
    <schema fileName="element_name_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "foo bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::name] Starts with digit">
    <schema fileName="element_name_0012.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "8foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::name] Starts with .">
    <schema fileName="element_name_0013.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: ".foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::name] Starts with -">
    <schema fileName="element_name_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "-foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::name] Contains invalid character">
    <schema fileName="element_name_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "name" attribute is invalid: "foo:bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <!-- element::nillable -->
  <test group="attribute" name="[element][attribute::nillable] true (uppercase)">
    <schema fileName="element_nillable_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "nillable" attribute is invalid: "True" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::nillable] false (uppercase)">
    <schema fileName="element_nillable_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "nillable" attribute is invalid: "False" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::nillable] Numeric other than 0 or 1">
    <schema fileName="element_nillable_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "nillable" attribute is invalid: "2" is an invalid boolean datatype.</message>
    </schema>
  </test>
  <!-- element::ref -->
  <test group="attribute" name="[element][attribute::ref] Prefix (absent), local part (empty string)">
    <schema fileName="element_ref_0024.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (absent), local part (only white spaces)">
    <schema fileName="element_ref_0025.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (absent), local part (separated by white spaces)">
    <schema fileName="element_ref_0026.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "foo bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (absent), local part (starts with digit)">
    <schema fileName="element_ref_0027.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "8foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (absent), local part (starts with .)">
    <schema fileName="element_ref_0028.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: ".foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (absent), local part (starts with -)">
    <schema fileName="element_ref_0029.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "-foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (absent), local part (contains invalid character)">
    <schema fileName="element_ref_0030.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "foo+bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (empty string), local part (valid)">
    <schema fileName="element_ref_0031.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (only white spaces), local part (valid)">
    <schema fileName="element_ref_0032.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (separated by white spaces), local part (valid)">
    <schema fileName="element_ref_0033.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "foo bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (starts with digit), local part (valid)">
    <schema fileName="element_ref_0034.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "8foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (starts with .), local part (valid)">
    <schema fileName="element_ref_0035.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: ".foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (starts with -), local part (valid)">
    <schema fileName="element_ref_0036.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "-foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (contains invalid character), local part (valid)">
    <schema fileName="element_ref_0037.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "foo+bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (valid), local part (empty string)">
    <schema fileName="element_ref_0038.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (valid), local part (only white spaces)">
    <schema fileName="element_ref_0039.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (valid), local part (separated by white spaces)">
    <schema fileName="element_ref_0040.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "foo bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (valid), local part (starts with digit)">
    <schema fileName="element_ref_0041.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "8foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (valid), local part (starts with .)">
    <schema fileName="element_ref_0042.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: ".foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (valid), local part (starts with -)">
    <schema fileName="element_ref_0043.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "-foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix (valid), local part (contains invalid character)">
    <schema fileName="element_ref_0044.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "ref" attribute is invalid: "foo+bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::ref] Prefix not bound to namespace">
    <schema fileName="element_ref_0045.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "ref" attribute is invalid: The "foo" prefix is not bound to a namespace.</message>
    </schema>
  </test>
  <!-- element::type -->
  <test group="attribute" name="[element][attribute::type] Prefix (absent), local part (empty string)">
    <schema fileName="element_type_0024.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (absent), local part (only white spaces)">
    <schema fileName="element_type_0025.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (absent), local part (separated by white spaces)">
    <schema fileName="element_type_0026.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "foo bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (absent), local part (starts with digit)">
    <schema fileName="element_type_0027.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "8foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (absent), local part (starts with .)">
    <schema fileName="element_type_0028.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: ".foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (absent), local part (starts with -)">
    <schema fileName="element_type_0029.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "-foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (absent), local part (contains invalid character)">
    <schema fileName="element_type_0030.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "foo+bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (empty string), local part (valid)">
    <schema fileName="element_type_0031.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (only white spaces), local part (valid)">
    <schema fileName="element_type_0032.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (separated by white spaces), local part (valid)">
    <schema fileName="element_type_0033.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "foo bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (starts with digit), local part (valid)">
    <schema fileName="element_type_0034.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "8foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (starts with .), local part (valid)">
    <schema fileName="element_type_0035.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: ".foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (starts with -), local part (valid)">
    <schema fileName="element_type_0036.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "-foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (contains invalid character), local part (valid)">
    <schema fileName="element_type_0037.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "foo+bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (valid), local part (empty string)">
    <schema fileName="element_type_0038.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (valid), local part (only white spaces)">
    <schema fileName="element_type_0039.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (valid), local part (separated by white spaces)">
    <schema fileName="element_type_0040.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "foo bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (valid), local part (starts with digit)">
    <schema fileName="element_type_0041.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "8foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (valid), local part (starts with .)">
    <schema fileName="element_type_0042.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: ".foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (valid), local part (starts with -)">
    <schema fileName="element_type_0043.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "-foo" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix (valid), local part (contains invalid character)">
    <schema fileName="element_type_0044.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "type" attribute is invalid: "foo+bar" is an invalid NCName datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::type] Prefix not bound to namespace">
    <schema fileName="element_type_0045.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "type" attribute is invalid: The "foo" prefix is not bound to a namespace.</message>
    </schema>
  </test>
  <!-- annotation -->
  <test group="content" name="[attribute][annotation] not part of the XML Schema 1.0 namespace">
    <schema fileName="annotation_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "annotation" element (from no namespace) is unexpected, expected: "annotation", "simpleType" or "complexType".</message>
    </schema>
  </test>
  <!-- simpleType -->
  <test group="content" name="[attribute][simpleType] not part of the XML Schema 1.0 namespace">
    <schema fileName="simpletype_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "simpleType" element (from no namespace) is unexpected, expected: "annotation", "simpleType" or "complexType".</message>
    </schema>
  </test>
  <!-- complexType -->
  <test group="content" name="[attribute][complexType] not part of the XML Schema 1.0 namespace">
    <schema fileName="complexType_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "complexType" element (from no namespace) is unexpected, expected: "annotation", "simpleType" or "complexType".</message>
    </schema>
  </test>
  <!-- container -->
  <test group="content" name="[attribute][container] annotation unexpected annotation">
    <schema fileName="container_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "annotation" element (from http://www.w3.org/2001/XMLSchema namespace) is unexpected, expected: "simpleType" or "complexType".</message>
    </schema>
  </test>
  <test group="content" name="[attribute][container] simpleType unexpected simpleType">
    <schema fileName="container_0002.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "simpleType" element (from http://www.w3.org/2001/XMLSchema namespace) is unexpected, expected: none.</message>
    </schema>
  </test>
  <test group="content" name="[attribute][container] complexType unexpected complexType">
    <schema fileName="container_0003.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "complexType" element (from http://www.w3.org/2001/XMLSchema namespace) is unexpected, expected: none.</message>
    </schema>
  </test>
  <!-- TEMPLATE
  <test group="attribute|content" name="">
    <schema fileName=".xsd">
      <exception></exception>
      <message></message>
    </schema>
  </test>
  -->
</testSet>
