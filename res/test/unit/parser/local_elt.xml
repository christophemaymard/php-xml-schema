<testSet>
  <!-- element -->
  <test group="attribute" name="[element] unsupported attribute from no namespace">
    <schema fileName="element_0001.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" attribute (from no namespace) is not supported.</message>
    </schema>
  </test>
  <test group="attribute" name="[element] unsupported attribute from XML 1.0 namespace">
    <schema fileName="element_0002.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" attribute (from http://www.w3.org/XML/1998/namespace namespace) is not supported.</message>
    </schema>
  </test>
  <test group="attribute" name="[element] unsupported attribute from other namespace">
    <schema fileName="element_0003.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "bar" attribute (from http://example.org namespace) is not supported.</message>
    </schema>
  </test>
  <test group="content" name="[element] node not white space neither comment">
    <schema fileName="element_0004.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The node is not allowed ("foo").</message>
    </schema>
  </test>
  <test group="content" name="[element] foo child element is not supported">
    <schema fileName="element_0005.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidOperationException</exception>
      <message>The "foo" element (from no namespace) is unexpected, expected: none.</message>
    </schema>
  </test>
  <!-- element::block -->
  <test group="attribute" name="[element][attribute::block] Not substitution neither extension neither restriction">
    <schema fileName="element_block_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "foo" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all (uppercase)">
    <schema fileName="element_block_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#ALL" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with white spaces">
    <schema fileName="element_block_0016.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "    #all    " is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] substitution (uppercase)">
    <schema fileName="element_block_0017.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "subStitution" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] extension (uppercase)">
    <schema fileName="element_block_0018.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "exTension" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] restriction (uppercase)">
    <schema fileName="element_block_0019.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "Restriction" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with substitution">
    <schema fileName="element_block_0020.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#all substitution" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with extension">
    <schema fileName="element_block_0021.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "extension #all" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] #all with restriction">
    <schema fileName="element_block_0022.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "#all restriction" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::block] Value not substitution neither extension neither restriction in list">
    <schema fileName="element_block_0023.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "block" attribute is invalid: "substitution extension foo restriction" is an invalid blockSet type, expected "#all" or a list of "extension", "restriction" and/or "substitution".</message>
    </schema>
  </test>
  <!-- element::form -->
  <test group="attribute" name="[element][attribute::form] Empty string">
    <schema fileName="element_form_0003.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "" is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] Only white spaces">
    <schema fileName="element_form_0004.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "       " is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] Not qualified neither unqualified">
    <schema fileName="element_form_0005.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "foo" is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] qualified with whitespaces">
    <schema fileName="element_form_0006.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "    qualified     " is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] unqualified with whitespaces">
    <schema fileName="element_form_0007.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "    unqualified     " is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] qualified (uppercase)">
    <schema fileName="element_form_0008.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "Qualified" is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] unqualified (uppercase)">
    <schema fileName="element_form_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "Unqualified" is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::form] qualified and unqualified">
    <schema fileName="element_form_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "form" attribute is invalid: "qualified unqualified" is an invalid formChoice type, expected "qualified" or "unqualified".</message>
    </schema>
  </test>
  <!-- element::id -->
  <test group="attribute" name="[element][attribute::id] Empty string">
    <schema fileName="element_id_0009.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Only white spaces">
    <schema fileName="element_id_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Separated by whitespaces">
    <schema fileName="element_id_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "foo bar" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Starts with digit">
    <schema fileName="element_id_0012.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "8foo" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Starts with .">
    <schema fileName="element_id_0013.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: ".foo" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Starts with -">
    <schema fileName="element_id_0014.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "-foo" is an invalid ID datatype.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::id] Contains invalid character">
    <schema fileName="element_id_0015.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "id" attribute is invalid: "foo:bar" is an invalid ID datatype.</message>
    </schema>
  </test>
  <!-- element::maxOccurs -->
  <test group="attribute" name="[element][attribute::maxOccurs] unbounded surrounded by white spaces">
    <schema fileName="element_maxOccurs_0010.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "maxOccurs" attribute is invalid: "     unbounded      " is an invalid non-negative integer limit type.</message>
    </schema>
  </test>
  <test group="attribute" name="[element][attribute::maxOccurs] Negative integer">
    <schema fileName="element_maxOccurs_0011.xsd">
      <exception>\PhpXmlSchema\Exception\InvalidValueException</exception>
      <message>The "maxOccurs" attribute is invalid: "-9" is an invalid non-negative integer limit type.</message>
    </schema>
  </test>
  <!-- TEMPLATE
  <test group="attribute|content" name="">
    <schema fileName=".xsd">
      <exception></exception>
      <message></message>
    </schema>
  </test>
  -->
</testSet>
